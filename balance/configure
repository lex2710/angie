# Равномерная балансировка (round robin)
# Метод round_robin используетсяпо умолчанию. При таком методе, каждый запрос будет поступать на новый backend сервер, если он доступен, указанный в upstream.
# В случае недоступности сервера, он будет помечен как down и запрос будет отправлен на другой
# Для настройки балансировки:
# блок http
  upstream deb {
                zone deb 1024k;
                server deb_white:8080;
                server deb_gold:8080;
                server deb_green:8080;
                server deb_blue:8080;
                server deb_red:8080;
  }
# блок server
  location /test {
                proxy_pass http://deb;
  }

# Балансировка по хэшу с использованием переменных (на выбор)
# Для балансировки по хэшу, в upstream необходимо прописать соответсвующий параметр
# Пример запроса http://84.201.177.229/test?route=test
# В данном случае при постоянном обращении с данным аргументом, балансировщик будет направлять на один и тот же upstream сервер, в случае недоступности сервера, запрос будет отправлен на другой. 
  upstream deb {
                zone deb 1024k;
                hash $arg_route consistent;
                server deb_white:8080;
                server deb_gold:8080;
                server deb_green:8080;
                server deb_blue:8080;
                server deb_red:8080;
  }

# Произвольная балансировка (random)
# Для балансировки в режиме random в upstream необходимо прописать данный параметр.
# Если указан необязательный параметр two, Angie случайным образом выбирает два сервера, из которых выбирает сервер, используя указанный метод.
# По умолчанию соединение передается на сервер с наименьшим количеством активных соединений.
  upstream deb {
                zone deb 1024k;
                random two;
                server deb_white:8080;
                server deb_gold:8080;
                server deb_green:8080;
                server deb_blue:8080;
                server deb_red:8080;
  }
# Настройка с резервным backend сервером
# В данном варианте все запросы будут поступать на один сервер, который не является резервным, в случае недоступности основного сервера, запросы начинает обрабатывать резервный сервер.
# Во время обработки запросов резервным сервером происходят обращения и к основному с некторой периодичностью для проверки его состояния. Как только основной сервер вводится в работу, запросы начинают снова поступать на него.
# Можно указать несколько backup серверов, в этом случае при выходе основного сервера, каждый запрос будет распределяться на backup сервера в режиме round_robin, т.е. равномерно на каждый сервер.
  upstream deb {
                zone deb 1024k;
                server deb_white:8080;
                server deb_red:8080 backup;
  }
